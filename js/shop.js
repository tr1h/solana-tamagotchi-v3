// ============================================
// TAMA SHOP SYSTEM
// ============================================

const TAMAShop = {
    // –¢–æ–≤–∞—Ä—ã –º–∞–≥–∞–∑–∏–Ω–∞
    SHOP_ITEMS: {
        // –ö–∞—Ç–µ–≥–æ—Ä–∏—è: –ï–¥–∞
        food: [
            {
                id: 'apple',
                name: '–Ø–±–ª–æ–∫–æ',
                emoji: 'üçé',
                price: 10,
                description: '–û–±—ã—á–Ω–æ–µ —è–±–ª–æ–∫–æ',
                effect: { hunger: 20 }
            },
            {
                id: 'steak',
                name: '–°—Ç–µ–π–∫',
                emoji: 'üçñ',
                price: 20,
                description: '–°–æ—á–Ω—ã–π —Å—Ç–µ–π–∫',
                effect: { hunger: 40 }
            },
            {
                id: 'cake',
                name: '–¢–æ—Ä—Ç',
                emoji: 'üç∞',
                price: 30,
                description: '–í–∫—É—Å–Ω—ã–π —Ç–æ—Ä—Ç',
                effect: { hunger: 60, happiness: 10 }
            },
            {
                id: 'pizza',
                name: '–ü–∏—Ü—Ü–∞',
                emoji: 'üçï',
                price: 40,
                description: '–ë–æ–ª—å—à–∞—è –ø–∏—Ü—Ü–∞',
                effect: { hunger: 80, happiness: 20 }
            },
            {
                id: 'birthday_cake',
                name: '–ü—Ä–∞–∑–¥–Ω–∏—á–Ω—ã–π —Ç–æ—Ä—Ç',
                emoji: 'üéÇ',
                price: 50,
                description: '–û—Å–æ–±—ã–π —Ç–æ—Ä—Ç –¥–ª—è –æ—Å–æ–±—ã—Ö —Å–ª—É—á–∞–µ–≤',
                effect: { hunger: 100, happiness: 30 }
            }
        ],
        
        // –ö–∞—Ç–µ–≥–æ—Ä–∏—è: –ò–≥—Ä—É—à–∫–∏
        toys: [
            {
                id: 'ball',
                name: '–ú—è—á',
                emoji: '‚öΩ',
                price: 15,
                description: '–û–±—ã—á–Ω—ã–π –º—è—á',
                effect: { happiness: 20 }
            },
            {
                id: 'console',
                name: '–ò–≥—Ä–æ–≤–∞—è –∫–æ–Ω—Å–æ–ª—å',
                emoji: 'üéÆ',
                price: 25,
                description: '–î–ª—è –≤–∏—Ä—Ç—É–∞–ª—å–Ω—ã—Ö –∏–≥—Ä',
                effect: { happiness: 40 }
            },
            {
                id: 'teddy',
                name: '–ü–ª—é—à–µ–≤—ã–π –º–∏—à–∫–∞',
                emoji: 'üß∏',
                price: 35,
                description: '–ú—è–≥–∫–∏–π –∏ —É—é—Ç–Ω—ã–π',
                effect: { happiness: 60 }
            },
            {
                id: 'circus',
                name: '–¶–∏—Ä–∫–æ–≤–æ–π –Ω–∞–±–æ—Ä',
                emoji: 'üé™',
                price: 45,
                description: '–¶–µ–ª—ã–π —Ü–∏—Ä–∫!',
                effect: { happiness: 80 }
            }
        ],
        
        // –ö–∞—Ç–µ–≥–æ—Ä–∏—è: –ú–µ–¥–∏—Ü–∏–Ω–∞
        medicine: [
            {
                id: 'pill',
                name: '–¢–∞–±–ª–µ—Ç–∫–∞',
                emoji: 'üíä',
                price: 10,
                description: '–û—Ç –≤—Å–µ—Ö –±–æ–ª–µ–∑–Ω–µ–π',
                effect: { health: 20 }
            },
            {
                id: 'injection',
                name: '–ò–Ω—ä–µ–∫—Ü–∏—è',
                emoji: 'üíâ',
                price: 20,
                description: '–ë—ã—Å—Ç—Ä–æ–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ',
                effect: { health: 40 }
            },
            {
                id: 'medkit',
                name: '–õ–µ—á–µ–±–Ω—ã–π –Ω–∞–±–æ—Ä',
                emoji: 'üè•',
                price: 50,
                description: '–ü–æ–ª–Ω–æ–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ',
                effect: { health: 100 }
            }
        ],
        
        // –ö–∞—Ç–µ–≥–æ—Ä–∏—è: –≠–Ω–µ—Ä–≥–µ—Ç–∏–∫–∏
        energy: [
            {
                id: 'coffee',
                name: '–ö–æ—Ñ–µ',
                emoji: '‚òï',
                price: 10,
                description: '–ë–æ–¥—Ä—è—â–∏–π –Ω–∞–ø–∏—Ç–æ–∫',
                effect: { energy: 20 }
            },
            {
                id: 'energy_drink',
                name: '–≠–Ω–µ—Ä–≥–µ—Ç–∏–∫',
                emoji: 'ü•§',
                price: 20,
                description: '–ú–æ—â–Ω—ã–π –∑–∞—Ä—è–¥',
                effect: { energy: 40 }
            },
            {
                id: 'super_energy',
                name: '–°—É–ø–µ—Ä-—ç–Ω–µ—Ä–≥–∏—è',
                emoji: '‚ö°',
                price: 30,
                description: '–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –º–æ—â—å',
                effect: { energy: 60 }
            }
        ],
        
        // –ö–∞—Ç–µ–≥–æ—Ä–∏—è: –ö–æ—Å–º–µ—Ç–∏–∫–∞
        cosmetics: [
            {
                id: 'hat',
                name: '–®–ª—è–ø–∞',
                emoji: 'üé©',
                price: 100,
                description: '–°—Ç–∏–ª—å–Ω–∞—è —à–ª—è–ø–∞',
                effect: { visual: 'hat' }
            },
            {
                id: 'crown',
                name: '–ö–æ—Ä–æ–Ω–∞',
                emoji: 'üëë',
                price: 200,
                description: '–î–ª—è –Ω–∞—Å—Ç–æ—è—â–∏—Ö –∫–æ—Ä–æ–ª–µ–π',
                effect: { visual: 'crown' }
            },
            {
                id: 'wings',
                name: '–ö—Ä—ã–ª—å—è',
                emoji: 'ü¶ã',
                price: 150,
                description: '–ö—Ä–∞—Å–∏–≤—ã–µ –∫—Ä—ã–ª—å—è',
                effect: { visual: 'wings' }
            },
            {
                id: 'sparkle',
                name: '–°–∏—è–Ω–∏–µ',
                emoji: '‚ú®',
                price: 250,
                description: '–í–æ–ª—à–µ–±–Ω–æ–µ —Å–∏—è–Ω–∏–µ',
                effect: { visual: 'sparkle' }
            }
        ],
        
        // –ö–∞—Ç–µ–≥–æ—Ä–∏—è: –ë—É—Å—Ç—ã
        boosts: [
            {
                id: 'xp_boost',
                name: '2x XP (1 —á–∞—Å)',
                emoji: 'üìà',
                price: 100,
                description: '–£–¥–≤–æ–µ–Ω–Ω—ã–π –æ–ø—ã—Ç –Ω–∞ 1 —á–∞—Å',
                effect: { boost: 'xp', duration: 3600 }
            },
            {
                id: 'tama_boost',
                name: '2x TAMA (1 —á–∞—Å)',
                emoji: 'üí∞',
                price: 150,
                description: '–£–¥–≤–æ–µ–Ω–Ω—ã–π TAMA –Ω–∞ 1 —á–∞—Å',
                effect: { boost: 'tama', duration: 3600 }
            },
            {
                id: 'hunger_protection',
                name: '–ó–∞—â–∏—Ç–∞ –æ—Ç –≥–æ–ª–æ–¥–∞ (24 —á–∞—Å–∞)',
                emoji: 'üõ°Ô∏è',
                price: 200,
                description: '–ì–æ–ª–æ–¥ –Ω–µ —É–º–µ–Ω—å—à–∞–µ—Ç—Å—è 24 —á–∞—Å–∞',
                effect: { boost: 'hunger_protection', duration: 86400 }
            },
            {
                id: 'lucky_buff',
                name: 'Lucky Buff (1 —á–∞—Å)',
                emoji: 'üéØ',
                price: 300,
                description: '–£–≤–µ–ª–∏—á–µ–Ω–Ω—ã–π —à–∞–Ω—Å —Ä–µ–¥–∫–∏—Ö –Ω–∞–≥—Ä–∞–¥',
                effect: { boost: 'lucky', duration: 3600 }
            }
        ]
    },
    
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–∞–≥–∞–∑–∏–Ω–∞
    init() {
        console.log('üõí Initializing TAMA Shop...');
        this.setupShopUI();
        console.log('‚úÖ TAMA Shop ready');
    },
    
    // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ UI –º–∞–≥–∞–∑–∏–Ω–∞
    setupShopUI() {
        // –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –æ—Ç–∫—Ä—ã—Ç–∏—è –º–∞–≥–∞–∑–∏–Ω–∞
        const shopBtn = document.getElementById('shop-btn');
        if (shopBtn) {
            shopBtn.addEventListener('click', () => this.openShop());
        }
    },
    
    // –û—Ç–∫—Ä—ã—Ç—å –º–∞–≥–∞–∑–∏–Ω
    openShop() {
        console.log('üõí Opening TAMA Shop...');
        
        // –°–æ–∑–¥–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –º–∞–≥–∞–∑–∏–Ω–∞
        this.createShopModal();
        
        // –ó–∞–≥—Ä—É–∂–∞–µ–º –±–∞–ª–∞–Ω—Å –∏ —Ç–æ–≤–∞—Ä—ã
        this.loadShopBalance();
        this.loadShopItems('food');
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –±–∞–ª–∞–Ω—Å –∫–∞–∂–¥—ã–µ 2 —Å–µ–∫—É–Ω–¥—ã
        this.balanceInterval = setInterval(() => {
            this.refreshBalance();
        }, 2000);
    },
    
    // –°–æ–∑–¥–∞—Ç—å –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –º–∞–≥–∞–∑–∏–Ω–∞
    createShopModal() {
        // –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä–æ–µ –æ–∫–Ω–æ –µ—Å–ª–∏ –µ—Å—Ç—å
        const oldModal = document.getElementById('shop-modal');
        if (oldModal) oldModal.remove();
        
        const modal = document.createElement('div');
        modal.id = 'shop-modal';
        modal.className = 'shop-modal';
        modal.innerHTML = `
            <div class="shop-modal-content">
                <div class="shop-header">
                    <h2>üõí TAMA SHOP</h2>
                    <span class="shop-close" onclick="window.TAMAShop.closeShop()">&times;</span>
                </div>
                
                <div class="shop-balance">
                    <span>üí∞ Your Balance:</span>
                    <span id="shop-balance" class="shop-balance-amount">Loading...</span>
                </div>
                
                <div class="shop-tabs">
                    <button class="shop-tab active" data-category="food">üçé –ï–¥–∞</button>
                    <button class="shop-tab" data-category="toys">üéæ –ò–≥—Ä—É—à–∫–∏</button>
                    <button class="shop-tab" data-category="medicine">üíä –ú–µ–¥–∏—Ü–∏–Ω–∞</button>
                    <button class="shop-tab" data-category="energy">‚ö° –≠–Ω–µ—Ä–≥–∏—è</button>
                    <button class="shop-tab" data-category="cosmetics">üé® –ö–æ—Å–º–µ—Ç–∏–∫–∞</button>
                    <button class="shop-tab" data-category="boosts">üöÄ –ë—É—Å—Ç—ã</button>
                </div>
                
                <div class="shop-items" id="shop-items">
                    <!-- Items will be loaded here -->
                </div>
            </div>
        `;
        
        document.body.appendChild(modal);
        
        // –ó–∞–≥—Ä—É–∂–∞–µ–º –±–∞–ª–∞–Ω—Å
        this.loadShopBalance();
        
        // –ó–∞–≥—Ä—É–∂–∞–µ–º —Ç–æ–≤–∞—Ä—ã (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é - –µ–¥–∞)
        this.loadShopItems('food');
        
        // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è —Ç–∞–±–æ–≤
        const tabs = modal.querySelectorAll('.shop-tab');
        tabs.forEach(tab => {
            tab.addEventListener('click', () => {
                tabs.forEach(t => t.classList.remove('active'));
                tab.classList.add('active');
                this.loadShopItems(tab.dataset.category);
            });
        });
    },
    
    // –ó–∞–≥—Ä—É–∑–∏—Ç—å –±–∞–ª–∞–Ω—Å
    async loadShopBalance() {
        try {
            if (!window.WalletManager || !window.WalletManager.publicKey) {
                return;
            }
            
            let balance = 0;
            
            // –ü–æ–ª—É—á–∞–µ–º –±–∞–ª–∞–Ω—Å –∏–∑ TAMA Module –∏–ª–∏ Database
            const walletAddress = window.WalletManager?.publicKey?.toString();
            
        if (window.SimpleTAMASystem) {
            balance = await window.SimpleTAMASystem.getBalance(walletAddress);
        } else if (window.TAMAModule) {
            balance = await window.TAMAModule.getBalance(walletAddress);
        } else if (window.Database) {
            // –ü–æ–ª—É—á–∞–µ–º –±–∞–ª–∞–Ω—Å –∏–∑ leaderboard —Ç–∞–±–ª–∏—Ü—ã
            const { data } = await window.Database.supabase
                .from('leaderboard')
                .select('tama')
                .eq('wallet_address', walletAddress)
                .single();
            
            balance = data?.tama || 0;
        }
            
            const balanceElement = document.getElementById('shop-balance');
            if (balanceElement) {
                balanceElement.textContent = `${balance} TAMA`;
            }
            
            console.log('üõí Shop balance loaded:', balance, 'TAMA');
        } catch (error) {
            console.error('‚ùå Error loading shop balance:', error);
        }
    },
    
    // –û–±–Ω–æ–≤–∏—Ç—å –±–∞–ª–∞–Ω—Å –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏
    async refreshBalance() {
        await this.loadShopBalance();
    },
    
    // –ó–∞–∫—Ä—ã—Ç—å –º–∞–≥–∞–∑–∏–Ω
    closeShop() {
        // –û—á–∏—â–∞–µ–º –∏–Ω—Ç–µ—Ä–≤–∞–ª –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞
        if (this.balanceInterval) {
            clearInterval(this.balanceInterval);
            this.balanceInterval = null;
        }
        
        // –£–¥–∞–ª—è–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
        const modal = document.getElementById('shop-modal');
        if (modal) {
            modal.remove();
        }
    },
    
    // –ó–∞–≥—Ä—É–∑–∏—Ç—å —Ç–æ–≤–∞—Ä—ã –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    loadShopItems(category) {
        const itemsContainer = document.getElementById('shop-items');
        if (!itemsContainer) return;
        
        const items = this.SHOP_ITEMS[category] || [];
        
        itemsContainer.innerHTML = items.map(item => `
            <div class="shop-item">
                <div class="shop-item-emoji">${item.emoji}</div>
                <div class="shop-item-info">
                    <div class="shop-item-name">${item.name}</div>
                    <div class="shop-item-description">${item.description}</div>
                    <div class="shop-item-effect">${this.formatEffect(item.effect)}</div>
                </div>
                <div class="shop-item-actions">
                    <div class="shop-item-price">${item.price} TAMA</div>
                    <button class="shop-item-buy" onclick="window.TAMAShop.buyItem('${category}', '${item.id}')">
                        –ö—É–ø–∏—Ç—å
                    </button>
                </div>
            </div>
        `).join('');
    },
    
    // –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞—Ç—å —ç—Ñ—Ñ–µ–∫—Ç —Ç–æ–≤–∞—Ä–∞
    formatEffect(effect) {
        const parts = [];
        
        if (effect.hunger) parts.push(`+${effect.hunger} –ì–æ–ª–æ–¥`);
        if (effect.happiness) parts.push(`+${effect.happiness} –°—á–∞—Å—Ç—å–µ`);
        if (effect.health) parts.push(`+${effect.health} –ó–¥–æ—Ä–æ–≤—å–µ`);
        if (effect.energy) parts.push(`+${effect.energy} –≠–Ω–µ—Ä–≥–∏—è`);
        if (effect.visual) parts.push(`–í–∏–∑—É–∞–ª: ${effect.visual}`);
        if (effect.boost) {
            const duration = effect.duration / 3600;
            parts.push(`–ë—É—Å—Ç: ${effect.boost} (${duration}—á)`);
        }
        
        return parts.join(', ');
    },
    
    // –ö—É–ø–∏—Ç—å —Ç–æ–≤–∞—Ä
    async buyItem(category, itemId) {
        try {
            if (!window.WalletManager || !window.WalletManager.publicKey) {
                alert('–ü–æ–¥–∫–ª—é—á–∏—Ç–µ –∫–æ—à–µ–ª–µ–∫!');
                return;
            }
            
            // –ù–∞—Ö–æ–¥–∏–º —Ç–æ–≤–∞—Ä
            const item = this.SHOP_ITEMS[category].find(i => i.id === itemId);
            if (!item) {
                alert('–¢–æ–≤–∞—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω!');
                return;
            }
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–∞–ª–∞–Ω—Å
            let balance = 0;
            const walletAddress = window.WalletManager.publicKey.toString();
            
        if (window.SimpleTAMASystem) {
            balance = await window.SimpleTAMASystem.getBalance(walletAddress);
        } else if (window.TAMAModule) {
            balance = await window.TAMAModule.getBalance(walletAddress);
        } else if (window.Database) {
            // –ü–æ–ª—É—á–∞–µ–º –±–∞–ª–∞–Ω—Å –∏–∑ leaderboard —Ç–∞–±–ª–∏—Ü—ã
            const { data } = await window.Database.supabase
                .from('leaderboard')
                .select('tama')
                .eq('wallet_address', walletAddress)
                .single();
            
            balance = data?.tama || 0;
        }
            
            if (balance < item.price) {
                alert(`–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ TAMA! –£ –≤–∞—Å: ${balance} TAMA, –Ω—É–∂–Ω–æ: ${item.price} TAMA`);
                return;
            }
            
            // –¢—Ä–∞—Ç–∏–º TAMA —á–µ—Ä–µ–∑ SimpleTAMASystem
            let spent = false;
            if (window.SimpleTAMASystem) {
                spent = await window.SimpleTAMASystem.spendTAMA(
                    window.WalletManager.publicKey.toString(),
                    item.price,
                    `Shop: ${item.name}`
                );
            } else if (window.TAMAModule) {
                spent = await window.TAMAModule.spendTAMA(
                    window.WalletManager.publicKey.toString(),
                    item.price,
                    `Shop: ${item.name}`,
                    `Bought ${item.name} from shop`
                );
            } else if (window.Database) {
                await window.Database.updateTAMA(window.WalletManager.publicKey.toString(), -item.price, `Shop: ${item.name}`);
                spent = true;
            }
            
            if (!spent) {
                alert('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∫—É–ø–∫–µ!');
                return;
            }
            
            // –ü—Ä–∏–º–µ–Ω—è–µ–º —ç—Ñ—Ñ–µ–∫—Ç
            await this.applyItemEffect(item);
            
            // –û–±–Ω–æ–≤–ª—è–µ–º –±–∞–ª–∞–Ω—Å
            await this.loadShopBalance();
            
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
            if (window.Utils && window.Utils.showNotification) {
                window.Utils.showNotification(`‚úÖ –ö—É–ø–ª–µ–Ω–æ: ${item.emoji} ${item.name} –∑–∞ ${item.price} TAMA!`);
            }
            
            console.log(`‚úÖ Bought ${item.name} for ${item.price} TAMA`);
            
        } catch (error) {
            console.error('‚ùå Error buying item:', error);
            alert('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∫—É–ø–∫–µ —Ç–æ–≤–∞—Ä–∞!');
        }
    },
    
    // –ü—Ä–∏–º–µ–Ω–∏—Ç—å —ç—Ñ—Ñ–µ–∫—Ç —Ç–æ–≤–∞—Ä–∞
    async applyItemEffect(item) {
        try {
            if (!window.Game || !window.Game.pet) {
                console.warn('‚ö†Ô∏è No pet to apply effect to');
                return;
            }
            
            const effect = item.effect;
            
            // –ü—Ä–∏–º–µ–Ω—è–µ–º —ç—Ñ—Ñ–µ–∫—Ç—ã –Ω–∞ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏
            if (effect.hunger) {
                window.Game.pet.hunger = Math.min(100, window.Game.pet.hunger + effect.hunger);
            }
            if (effect.happiness) {
                window.Game.pet.happiness = Math.min(100, window.Game.pet.happiness + effect.happiness);
            }
            if (effect.health) {
                window.Game.pet.health = Math.min(100, window.Game.pet.health + effect.health);
            }
            if (effect.energy) {
                window.Game.pet.energy = Math.min(100, window.Game.pet.energy + effect.energy);
            }
            
            // –ü—Ä–∏–º–µ–Ω—è–µ–º –≤–∏–∑—É–∞–ª—å–Ω—ã–µ —ç—Ñ—Ñ–µ–∫—Ç—ã
            if (effect.visual) {
                window.Game.pet.cosmetic = effect.visual;
            }
            
            // –ü—Ä–∏–º–µ–Ω—è–µ–º –±—É—Å—Ç—ã
            if (effect.boost) {
                if (!window.Game.pet.boosts) window.Game.pet.boosts = {};
                window.Game.pet.boosts[effect.boost] = Date.now() + (effect.duration * 1000);
            }
            
            // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è
            if (window.Utils) {
                window.Utils.saveLocal('petData', window.Game.pet);
            }
            
            // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö (–æ–±–Ω–æ–≤–ª—è–µ–º hunger, happiness, health, energy)
            if (window.Database && window.Database.supabase && window.WalletManager && window.WalletManager.publicKey) {
                try {
                    const { error } = await window.Database.supabase
                        .from('nft_mints')
                        .update({
                            hunger: window.Game.pet.hunger || 100,
                            happiness: window.Game.pet.happiness || 100,
                            health: window.Game.pet.health || 100,
                            energy: window.Game.pet.energy || 100,
                            updated_at: new Date().toISOString()
                        })
                        .eq('wallet_address', window.WalletManager.publicKey.toString());
                    
                    if (error) {
                        console.error('‚ùå Error saving pet stats to database:', error);
                    } else {
                        console.log('‚úÖ Pet stats saved to database after shop purchase');
                    }
                } catch (error) {
                    console.error('‚ùå Error updating pet stats:', error);
                }
            }
            
            // –û–±–Ω–æ–≤–ª—è–µ–º UI –ø–∏—Ç–æ–º—Ü–∞
            if (window.Game && window.Game.updatePetDisplay) {
                window.Game.updatePetDisplay();
            }
            
            console.log('‚úÖ Item effect applied:', effect);
            
        } catch (error) {
            console.error('‚ùå Error applying item effect:', error);
        }
    }
};

// –≠–∫—Å–ø–æ—Ä—Ç –¥–ª—è –≥–ª–æ–±–∞–ª—å–Ω–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
window.TAMAShop = TAMAShop;

console.log('‚úÖ TAMA Shop loaded');
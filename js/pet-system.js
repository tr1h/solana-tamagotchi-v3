// ============================================
// üêæ PET SYSTEM MODULE - –ú–û–î–£–õ–¨–ù–ê–Ø –°–ò–°–¢–ï–ú–ê –ü–ò–¢–û–ú–¶–ï–í
// ============================================

const PetSystem = {
    
    // üéØ 1. –¢–ò–ü–´ –ü–ò–¢–û–ú–¶–ï–í –° –ü–û–õ–ù–´–ú–ò –•–ê–†–ê–ö–¢–ï–†–ò–°–¢–ò–ö–ê–ú–ò
    petTypes: {
        cat: {
            name: 'Cat',
            emoji: 'üê±',
            description: '–£–º–Ω—ã–π –∏ –Ω–µ–∑–∞–≤–∏—Å–∏–º—ã–π –ø–∏—Ç–æ–º–µ—Ü —Å –¥–µ–≤—è—Ç—å—é –∂–∏–∑–Ω—è–º–∏',
            category: 'smart', // —É–º–Ω—ã–π
            rarity: 'common',
            baseStats: {
                hunger: 80,
                energy: 90,
                happy: 85,
                health: 100,
                // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏
                intelligence: 90,
                strength: 60,
                speed: 85,
                magic: 50
            },
            abilities: ['nine_lives', 'stealth', 'agility'],
            tamaMultiplier: 1.0,
            evolutionPath: ['kitten', 'cat', 'wise_cat', 'cat_wizard', 'legendary_cat']
        },
        
        dog: {
            name: 'Dog',
            emoji: 'üê∂',
            description: '–í–µ—Ä–Ω—ã–π –¥—Ä—É–≥ —Å –≤—ã—Å–æ–∫–æ–π —ç–Ω–µ—Ä–≥–∏–µ–π –∏ –ø—Ä–µ–¥–∞–Ω–Ω–æ—Å—Ç—å—é',
            category: 'friendly',
            rarity: 'common',
            baseStats: {
                hunger: 85,
                energy: 95,
                happy: 90,
                health: 100,
                intelligence: 70,
                strength: 80,
                speed: 90,
                magic: 30
            },
            abilities: ['loyalty', 'fetch', 'guard'],
            tamaMultiplier: 1.0,
            evolutionPath: ['puppy', 'dog', 'guard_dog', 'alpha_dog', 'legendary_hound']
        },
        
        dragon: {
            name: 'Dragon',
            emoji: 'üêâ',
            description: '–ú–æ—â–Ω—ã–π –º–∏—Ñ–∏—á–µ—Å–∫–∏–π –∑–≤–µ—Ä—å —Å –æ–≥–Ω–µ–Ω–Ω—ã–º –¥—ã—Ö–∞–Ω–∏–µ–º',
            category: 'mythical',
            rarity: 'legendary',
            baseStats: {
                hunger: 70,
                energy: 85,
                happy: 80,
                health: 100,
                intelligence: 85,
                strength: 95,
                speed: 75,
                magic: 100
            },
            abilities: ['fire_breath', 'flight', 'intimidate'],
            tamaMultiplier: 1.5, // –õ–µ–≥–µ–Ω–¥–∞—Ä–Ω—ã–µ –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞—é—Ç –±–æ–ª—å—à–µ TAMA
            evolutionPath: ['drake', 'young_dragon', 'dragon', 'ancient_dragon', 'mythical_dragon']
        },
        
        fox: {
            name: 'Fox',
            emoji: 'ü¶ä',
            description: '–•–∏—Ç—Ä—ã–π –∏ –ª–æ–≤–∫–∏–π –æ—Ö–æ—Ç–Ω–∏–∫',
            category: 'smart',
            rarity: 'rare',
            baseStats: {
                hunger: 75,
                energy: 88,
                happy: 82,
                health: 100,
                intelligence: 95,
                strength: 65,
                speed: 92,
                magic: 60
            },
            abilities: ['cunning', 'stealth', 'charm'],
            tamaMultiplier: 1.1,
            evolutionPath: ['fox_kit', 'fox', 'clever_fox', 'mystic_fox', 'nine_tail_fox']
        },
        
        bear: {
            name: 'Bear',
            emoji: 'üêª',
            description: '–ú–æ–≥—É—á–∏–π –∏ —Å–∏–ª—å–Ω—ã–π –∑–∞—â–∏—Ç–Ω–∏–∫ –ª–µ—Å–∞',
            category: 'strong',
            rarity: 'common',
            baseStats: {
                hunger: 90,
                energy: 80,
                happy: 85,
                health: 100,
                intelligence: 60,
                strength: 100,
                speed: 60,
                magic: 40
            },
            abilities: ['roar', 'hibernate', 'crush'],
            tamaMultiplier: 1.0,
            evolutionPath: ['cub', 'bear', 'grizzly', 'berserker_bear', 'legendary_bear']
        },
        
        rabbit: {
            name: 'Rabbit',
            emoji: 'üê∞',
            description: '–ë—ã—Å—Ç—Ä—ã–π –∏ –º–∏–ª—ã–π –ø—Ä—ã–≥—É–Ω',
            category: 'cute',
            rarity: 'common',
            baseStats: {
                hunger: 70,
                energy: 95,
                happy: 88,
                health: 100,
                intelligence: 75,
                strength: 50,
                speed: 100,
                magic: 55
            },
            abilities: ['jump', 'dash', 'luck'],
            tamaMultiplier: 1.0,
            evolutionPath: ['bunny', 'rabbit', 'hare', 'moon_rabbit', 'legendary_bunny']
        },
        
        panda: {
            name: 'Panda',
            emoji: 'üêº',
            description: '–°–ø–æ–∫–æ–π–Ω—ã–π –∏ –º—É–¥—Ä—ã–π –º–∞—Å—Ç–µ—Ä –±–∞–º–±—É–∫–∞',
            category: 'cute',
            rarity: 'rare',
            baseStats: {
                hunger: 85,
                energy: 75,
                happy: 92,
                health: 100,
                intelligence: 80,
                strength: 85,
                speed: 65,
                magic: 70
            },
            abilities: ['bamboo_feast', 'calm', 'zen'],
            tamaMultiplier: 1.1,
            evolutionPath: ['cub', 'panda', 'kung_fu_panda', 'master_panda', 'legendary_panda']
        },
        
        lion: {
            name: 'Lion',
            emoji: 'ü¶Å',
            description: '–ö–æ—Ä–æ–ª—å –∑–≤–µ—Ä–µ–π —Å –≥–æ—Ä–¥—ã–º –Ω—Ä–∞–≤–æ–º',
            category: 'strong',
            rarity: 'epic',
            baseStats: {
                hunger: 88,
                energy: 85,
                happy: 80,
                health: 100,
                intelligence: 75,
                strength: 95,
                speed: 88,
                magic: 50
            },
            abilities: ['roar', 'leadership', 'pride'],
            tamaMultiplier: 1.3,
            evolutionPath: ['cub', 'lion', 'pride_leader', 'king_lion', 'legendary_beast']
        },
        
        unicorn: {
            name: 'Unicorn',
            emoji: 'ü¶Ñ',
            description: '–ú–∞–≥–∏—á–µ—Å–∫–æ–µ —Å—É—â–µ—Å—Ç–≤–æ —Å —Ü–µ–ª–∏—Ç–µ–ª—å–Ω—ã–º–∏ —Å–∏–ª–∞–º–∏',
            category: 'mythical',
            rarity: 'epic',
            baseStats: {
                hunger: 65,
                energy: 90,
                happy: 95,
                health: 100,
                intelligence: 90,
                strength: 70,
                speed: 85,
                magic: 100
            },
            abilities: ['healing', 'magic_boost', 'purify'],
            tamaMultiplier: 1.3,
            evolutionPath: ['foal', 'unicorn', 'mystic_unicorn', 'celestial_unicorn', 'legendary_alicorn']
        },
        
        wolf: {
            name: 'Wolf',
            emoji: 'üê∫',
            description: '–î–∏–∫–∏–π –æ—Ö–æ—Ç–Ω–∏–∫ —Å –∏–Ω—Å—Ç–∏–Ω–∫—Ç–æ–º –≤–æ–∂–∞–∫–∞',
            category: 'strong',
            rarity: 'epic',
            baseStats: {
                hunger: 82,
                energy: 92,
                happy: 78,
                health: 100,
                intelligence: 85,
                strength: 90,
                speed: 95,
                magic: 60
            },
            abilities: ['howl', 'pack_leader', 'hunt'],
            tamaMultiplier: 1.3,
            evolutionPath: ['pup', 'wolf', 'alpha_wolf', 'dire_wolf', 'legendary_fenrir']
        },
        
        griffin: {
            name: 'Griffin',
            emoji: 'ü¶Ö',
            description: '–ë–ª–∞–≥–æ—Ä–æ–¥–Ω–æ–µ —Å—É—â–µ—Å—Ç–≤–æ —Å —Ç–µ–ª–æ–º –ª—å–≤–∞ –∏ –∫—Ä—ã–ª—å—è–º–∏ –æ—Ä–ª–∞',
            category: 'mythical',
            rarity: 'legendary',
            baseStats: {
                hunger: 75,
                energy: 90,
                happy: 85,
                health: 100,
                intelligence: 90,
                strength: 90,
                speed: 95,
                magic: 85
            },
            abilities: ['sky_strike', 'noble_aura', 'swift_flight'],
            tamaMultiplier: 1.5,
            evolutionPath: ['hatchling', 'griffin', 'sky_guardian', 'royal_griffin', 'legendary_gryphon']
        }
    },
    
    // üéØ 2. –°–ò–°–¢–ï–ú–ê –°–ü–û–°–û–ë–ù–û–°–¢–ï–ô
    abilities: {
        // –°–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏ –∫–æ—Ç–æ–≤
        nine_lives: {
            name: 'Nine Lives',
            emoji: 'üê±',
            description: '–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–¥–æ—Ä–æ–≤—å—è –ø—Ä–∏ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö —É—Å–ª–æ–≤–∏—è—Ö',
            effect: (pet) => {
                if (pet.stats.health < 20) {
                    pet.stats.health = Math.min(100, pet.stats.health + 30);
                    return { success: true, message: 'üê± Nine Lives activated! +30 health!' };
                }
                return { success: false };
            },
            cooldown: 3600000, // 1 —á–∞—Å
            tamaBonus: 0
        },
        
        stealth: {
            name: 'Stealth',
            emoji: 'ü•∑',
            description: '–ü–æ–≤—ã—à–∞–µ—Ç —à–∞–Ω—Å –∏–∑–±–µ–∂–∞—Ç—å –Ω–µ–≥–∞—Ç–∏–≤–Ω—ã—Ö —Å–æ–±—ã—Ç–∏–π',
            effect: (pet) => {
                pet.stealth_active = true;
                return { success: true, message: 'ü•∑ Stealth mode activated!' };
            },
            cooldown: 1800000, // 30 –º–∏–Ω—É—Ç
            tamaBonus: 0
        },
        
        agility: {
            name: 'Agility',
            emoji: '‚ö°',
            description: '+15% –∫ —Å–∫–æ—Ä–æ—Å—Ç–∏ –∑–∞—Ä–∞–±–æ—Ç–∫–∞ TAMA',
            effect: (pet) => {
                return { success: true, message: '‚ö° Agility boost! +15% TAMA earning!', tamaMultiplier: 1.15 };
            },
            cooldown: 0, // –ü–∞—Å—Å–∏–≤–Ω–∞—è
            tamaBonus: 0.15
        },
        
        // –°–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏ –¥—Ä–∞–∫–æ–Ω–æ–≤
        fire_breath: {
            name: 'Fire Breath',
            emoji: 'üî•',
            description: '–ú–æ—â–Ω–∞—è –∞—Ç–∞–∫–∞, –∫–æ—Ç–æ—Ä–∞—è –¥–∞–µ—Ç +50 TAMA',
            effect: (pet) => {
                return { success: true, message: 'üî• Fire Breath! +50 TAMA!', tamaReward: 50 };
            },
            cooldown: 7200000, // 2 —á–∞—Å–∞
            tamaBonus: 0
        },
        
        flight: {
            name: 'Flight',
            emoji: '‚úàÔ∏è',
            description: '–ü–∞—Å—Å–∏–≤–Ω—ã–π –±–æ–Ω—É—Å +20% –∫ —ç–Ω–µ—Ä–≥–∏–∏',
            effect: (pet) => {
                pet.stats.energy = Math.min(100, pet.stats.energy * 1.2);
                return { success: true, message: '‚úàÔ∏è Flight bonus! +20% energy!' };
            },
            cooldown: 0, // –ü–∞—Å—Å–∏–≤–Ω–∞—è
            tamaBonus: 0
        },
        
        intimidate: {
            name: 'Intimidate',
            emoji: 'üòà',
            description: '–£–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç –Ω–∞–≥—Ä–∞–¥—ã –∑–∞ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤ –Ω–∞ 25%',
            effect: (pet) => {
                return { success: true, message: 'üòà Intimidate! +25% referral bonus!', referralMultiplier: 1.25 };
            },
            cooldown: 0, // –ü–∞—Å—Å–∏–≤–Ω–∞—è
            tamaBonus: 0
        },
        
        // –°–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏ –≤–æ–ª–∫–æ–≤
        howl: {
            name: 'Howl',
            emoji: 'üåô',
            description: '–ü—Ä–∏–∑—ã–≤–∞–µ—Ç —Å—Ç–∞—é, +30 TAMA –∑–∞ –∫–∞–∂–¥–æ–≥–æ —Ä–µ—Ñ–µ—Ä–∞–ª–∞',
            effect: (pet, referralCount) => {
                const bonus = (referralCount || 0) * 30;
                return { success: true, message: `üåô Howl! +${bonus} TAMA from pack!`, tamaReward: bonus };
            },
            cooldown: 3600000, // 1 —á–∞—Å
            tamaBonus: 0
        },
        
        pack_leader: {
            name: 'Pack Leader',
            emoji: 'üëë',
            description: '–ü–∞—Å—Å–∏–≤–Ω—ã–π –±–æ–Ω—É—Å +50 TAMA –∑–∞ –∫–∞–∂–¥–æ–≥–æ Level 1 —Ä–µ—Ñ–µ—Ä–∞–ª–∞',
            effect: (pet) => {
                return { success: true, message: 'üëë Pack Leader active!', referralBonus: 50 };
            },
            cooldown: 0, // –ü–∞—Å—Å–∏–≤–Ω–∞—è
            tamaBonus: 0
        },
        
        // –°–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏ –µ–¥–∏–Ω–æ—Ä–æ–≥–∞
        healing: {
            name: 'Healing',
            emoji: 'üíñ',
            description: '–í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –≤—Å–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ –¥–æ 100%',
            effect: (pet) => {
                pet.stats.health = 100;
                pet.stats.hunger = 100;
                pet.stats.energy = 100;
                pet.stats.happy = 100;
                return { success: true, message: 'üíñ Full Healing! All stats restored!' };
            },
            cooldown: 7200000, // 2 —á–∞—Å–∞
            tamaBonus: 0
        },
        
        magic_boost: {
            name: 'Magic Boost',
            emoji: '‚ú®',
            description: '+15% –∫ –∑–∞—Ä–∞–±–æ—Ç–∫—É TAMA',
            effect: (pet) => {
                return { success: true, message: '‚ú® Magic Boost! +15% TAMA!', tamaMultiplier: 1.15 };
            },
            cooldown: 0, // –ü–∞—Å—Å–∏–≤–Ω–∞—è
            tamaBonus: 0.15
        },
        
        // –°–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏ –ª–∏—Å—ã
        cunning: {
            name: 'Cunning',
            emoji: 'ü¶ä',
            description: '–®–∞–Ω—Å —É–¥–≤–æ–∏—Ç—å –Ω–∞–≥—Ä–∞–¥—ã –∑–∞ –¥–µ–π—Å—Ç–≤–∏—è',
            effect: (pet) => {
                if (Math.random() < 0.2) { // 20% —à–∞–Ω—Å
                    return { success: true, message: 'ü¶ä Cunning! Rewards doubled!', rewardMultiplier: 2 };
                }
                return { success: false };
            },
            cooldown: 0, // –ü–∞—Å—Å–∏–≤–Ω–∞—è
            tamaBonus: 0
        },
        
        // –°–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏ Griffin
        sky_strike: {
            name: 'Sky Strike',
            emoji: '‚ö°',
            description: '–ú–æ—â–Ω–∞—è –∞—Ç–∞–∫–∞ —Å –Ω–µ–±–∞, +60 TAMA',
            effect: (pet) => {
                return { success: true, message: '‚ö° Sky Strike! +60 TAMA!', tamaReward: 60 };
            },
            cooldown: 3600000, // 1 —á–∞—Å
            tamaBonus: 0
        },
        
        noble_aura: {
            name: 'Noble Aura',
            emoji: 'üëë',
            description: '–ë–ª–∞–≥–æ—Ä–æ–¥–Ω–∞—è –∞—É—Ä–∞, +20% –∫ –∑–∞—Ä–∞–±–æ—Ç–∫—É TAMA –∏ —Ä–µ—Ñ–µ—Ä–∞–ª–∞–º',
            effect: (pet) => {
                return { success: true, message: 'üëë Noble Aura active! +20% TAMA & Referrals!', tamaMultiplier: 1.2, referralMultiplier: 1.2 };
            },
            cooldown: 0, // –ü–∞—Å—Å–∏–≤–Ω–∞—è
            tamaBonus: 0.2
        },
        
        swift_flight: {
            name: 'Swift Flight',
            emoji: 'ü¶Ö',
            description: '–ë—ã—Å—Ç—Ä—ã–π –ø–æ–ª–µ—Ç, –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ —ç–Ω–µ—Ä–≥–∏–∏ –∏ —Å–∫–æ—Ä–æ—Å—Ç–∏',
            effect: (pet) => {
                pet.stats.energy = Math.min(100, pet.stats.energy + 50);
                return { success: true, message: 'ü¶Ö Swift Flight! +50 energy!' };
            },
            cooldown: 1800000, // 30 –º–∏–Ω—É—Ç
            tamaBonus: 0
        },
        
        // –°–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏ –º–µ–¥–≤–µ–¥—è
        roar: {
            name: 'Roar',
            emoji: 'üêª',
            description: '–£—Å—Ç—Ä–∞—à–∞—é—â–∏–π —Ä–µ–≤, +40 TAMA',
            effect: (pet) => {
                return { success: true, message: 'üêª Roar! +40 TAMA!', tamaReward: 40 };
            },
            cooldown: 3600000, // 1 —á–∞—Å
            tamaBonus: 0
        },
        
        hibernate: {
            name: 'Hibernate',
            emoji: 'üò¥',
            description: '–ó–∞–º–µ–¥–ª—è–µ—Ç –¥–µ–≥—Ä–∞–¥–∞—Ü–∏—é —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫ –Ω–∞ 50%',
            effect: (pet) => {
                pet.hibernate_active = true;
                return { success: true, message: 'üò¥ Hibernating! Stats decay slower!' };
            },
            cooldown: 0, // –ü–∞—Å—Å–∏–≤–Ω–∞—è
            tamaBonus: 0
        },
        
        // –°–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏ –∫—Ä–æ–ª–∏–∫–∞
        luck: {
            name: 'Luck',
            emoji: 'üçÄ',
            description: '–®–∞–Ω—Å –ø–æ–ª—É—á–∏—Ç—å —Å–ª—É—á–∞–π–Ω—ã–µ –±–æ–Ω—É—Å—ã TAMA (10-50)',
            effect: (pet) => {
                if (Math.random() < 0.3) { // 30% —à–∞–Ω—Å
                    const bonus = Math.floor(Math.random() * 41) + 10; // 10-50 TAMA
                    return { success: true, message: `üçÄ Lucky! +${bonus} TAMA!`, tamaReward: bonus };
                }
                return { success: false };
            },
            cooldown: 0, // –ü–∞—Å—Å–∏–≤–Ω–∞—è
            tamaBonus: 0
        }
    },
    
    // üéØ 3. –°–ò–°–¢–ï–ú–ê –≠–í–û–õ–Æ–¶–ò–ò
    evolutions: {
        // –§–æ—Ä–º—ã —ç–≤–æ–ª—é—Ü–∏–∏ —Å —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∞–º–∏
        0: { name: 'Baby', emoji: 'ü•ö', statMultiplier: 0.8, description: '–¢–æ–ª—å–∫–æ —Ä–æ–¥–∏–ª—Å—è' },
        1: { name: 'Young', emoji: 'üê£', statMultiplier: 1.0, description: '–ú–æ–ª–æ–¥–æ–π –∏ —ç–Ω–µ—Ä–≥–∏—á–Ω—ã–π' },
        2: { name: 'Adult', emoji: 'üí™', statMultiplier: 1.2, description: '–í–∑—Ä–æ—Å–ª—ã–π –∏ —Å–∏–ª—å–Ω—ã–π' },
        3: { name: 'Wise', emoji: 'üßô', statMultiplier: 1.5, description: '–ú—É–¥—Ä—ã–π –∏ –æ–ø—ã—Ç–Ω—ã–π' },
        4: { name: 'Legendary', emoji: 'üëë', statMultiplier: 2.0, description: '–õ–µ–≥–µ–Ω–¥–∞—Ä–Ω—ã–π –≥–µ—Ä–æ–π' }
    },
    
    // –¢—Ä–µ–±–æ–≤–∞–Ω–∏—è –¥–ª—è —ç–≤–æ–ª—é—Ü–∏–∏
    evolutionRequirements: {
        1: { level: 5, xp: 500, tama: 100 },
        2: { level: 10, xp: 2000, tama: 300 },
        3: { level: 20, xp: 5000, tama: 1000 },
        4: { level: 30, xp: 10000, tama: 3000 }
    },
    
    // üéØ 4. –°–ò–°–¢–ï–ú–ê –†–ï–î–ö–û–°–¢–ò
    raritySystem: {
        common: {
            name: 'Common',
            emoji: 'üíö',
            probability: 0.70, // 70%
            statBonus: 1.0,
            tamaMultiplier: 1.0,
            color: '#4CAF50',
            description: '–û–±—ã—á–Ω—ã–π –ø–∏—Ç–æ–º–µ—Ü'
        },
        rare: {
            name: 'Rare',
            emoji: 'üíô',
            probability: 0.20, // 20%
            statBonus: 1.1,
            tamaMultiplier: 1.1,
            color: '#2196F3',
            description: '–†–µ–¥–∫–∏–π –ø–∏—Ç–æ–º–µ—Ü —Å —É–ª—É—á—à–µ–Ω–Ω—ã–º–∏ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∞–º–∏'
        },
        epic: {
            name: 'Epic',
            emoji: 'üíú',
            probability: 0.08, // 8%
            statBonus: 1.3,
            tamaMultiplier: 1.3,
            color: '#9C27B0',
            description: '–≠–ø–∏—á–µ—Å–∫–∏–π –ø–∏—Ç–æ–º–µ—Ü —Å —É–Ω–∏–∫–∞–ª—å–Ω—ã–º–∏ —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—è–º–∏'
        },
        legendary: {
            name: 'Legendary',
            emoji: 'üß°',
            probability: 0.02, // 2%
            statBonus: 1.5,
            tamaMultiplier: 1.5,
            color: '#FF9800',
            description: '–õ–µ–≥–µ–Ω–¥–∞—Ä–Ω—ã–π –ø–∏—Ç–æ–º–µ—Ü —Å –Ω–µ–≤–µ—Ä–æ—è—Ç–Ω–æ–π —Å–∏–ª–æ–π'
        }
    },
    
    // üéØ –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø
    init() {
        console.log('üêæ Pet System initialized!');
        this.setupAbilityCooldowns();
    },
    
    // üéØ –°–û–ó–î–ê–ù–ò–ï –ü–ò–¢–û–ú–¶–ê
    createPet(type, rarity, name = null) {
        const petType = this.petTypes[type];
        if (!petType) {
            console.error(`Pet type "${type}" not found!`);
            return null;
        }
        
        const rarityData = this.raritySystem[rarity] || this.raritySystem.common;
        
        const pet = {
            id: `${Date.now()}_${Math.random().toString(36).substr(2, 9)}`,
            type: type,
            name: name || `My ${petType.name}`,
            emoji: petType.emoji,
            category: petType.category,
            rarity: rarity,
            evolution: 0,
            level: 1,
            xp: 0,
            total_xp: 0,
            
            // –ë–∞–∑–æ–≤—ã–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏
            stats: this.calculateStats(petType.baseStats, rarityData.statBonus, 0),
            
            // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏
            attributes: {
                intelligence: petType.baseStats.intelligence || 50,
                strength: petType.baseStats.strength || 50,
                speed: petType.baseStats.speed || 50,
                magic: petType.baseStats.magic || 50
            },
            
            // –°–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏
            abilities: petType.abilities || [],
            abilityCooldowns: {},
            
            // –ú–Ω–æ–∂–∏—Ç–µ–ª–∏
            tamaMultiplier: petType.tamaMultiplier * rarityData.tamaMultiplier,
            
            // –ú–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ
            createdAt: Date.now(),
            lastUpdate: Date.now(),
            lastFed: Date.now(),
            lastPlayed: Date.now(),
            lastSlept: Date.now(),
            
            // –°–æ—Å—Ç–æ—è–Ω–∏—è
            isDead: false,
            isCritical: false,
            isHibernating: false,
            isStealthed: false
        };
        
        console.log(`üêæ Created ${rarityData.emoji} ${rarityData.name} ${petType.name}!`, pet);
        return pet;
    },
    
    // üéØ –†–ê–°–ß–ï–¢ –•–ê–†–ê–ö–¢–ï–†–ò–°–¢–ò–ö
    calculateStats(baseStats, rarityBonus, evolutionLevel) {
        const evolutionData = this.evolutions[evolutionLevel] || this.evolutions[0];
        const multiplier = rarityBonus * evolutionData.statMultiplier;
        
        return {
            hunger: Math.min(100, Math.floor(baseStats.hunger * multiplier)),
            energy: Math.min(100, Math.floor(baseStats.energy * multiplier)),
            happy: Math.min(100, Math.floor(baseStats.happy * multiplier)),
            health: Math.min(100, Math.floor(baseStats.health * multiplier))
        };
    },
    
    // üéØ –ü–†–û–í–ï–†–ö–ê –≠–í–û–õ–Æ–¶–ò–ò
    canEvolve(pet) {
        if (pet.evolution >= 4) return false; // –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —ç–≤–æ–ª—é—Ü–∏—è
        
        const nextEvolution = pet.evolution + 1;
        const requirements = this.evolutionRequirements[nextEvolution];
        
        if (!requirements) return false;
        
        return pet.level >= requirements.level && 
               pet.total_xp >= requirements.xp;
    },
    
    // üéØ –≠–í–û–õ–Æ–¶–ò–Ø –ü–ò–¢–û–ú–¶–ê
    async evolvePet(pet, walletAddress) {
        if (!this.canEvolve(pet)) {
            return { success: false, message: 'Not ready to evolve!' };
        }
        
        const nextEvolution = pet.evolution + 1;
        const requirements = this.evolutionRequirements[nextEvolution];
        
        // –ü—Ä–æ–≤–µ—Ä–∫–∞ TAMA
        if (window.TAMAModule) {
            const balance = await window.TAMAModule.getBalance(walletAddress);
            if (balance < requirements.tama) {
                return { success: false, message: `Need ${requirements.tama} TAMA to evolve!` };
            }
            
            // –°–ø–∏—Å—ã–≤–∞–µ–º TAMA
            await window.TAMAModule.spendTAMA(requirements.tama, 'evolution', 
                `Evolution to ${this.evolutions[nextEvolution].name}`);
        }
        
        // –≠–≤–æ–ª—é—Ü–∏—è
        pet.evolution = nextEvolution;
        const evolutionData = this.evolutions[nextEvolution];
        const petType = this.petTypes[pet.type];
        const rarityData = this.raritySystem[pet.rarity];
        
        // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫
        pet.stats = this.calculateStats(petType.baseStats, rarityData.statBonus, nextEvolution);
        pet.tamaMultiplier = petType.tamaMultiplier * rarityData.tamaMultiplier * evolutionData.statMultiplier;
        
        // –ü–æ–ª–Ω–æ–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ
        pet.stats.health = 100;
        pet.stats.hunger = 100;
        pet.stats.energy = 100;
        pet.stats.happy = 100;
        
        pet.lastUpdate = Date.now();
        
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º
        if (window.Database) {
            await window.Database.savePetData(walletAddress, pet);
        }
        
        console.log(`üéâ Pet evolved to ${evolutionData.name}!`, pet);
        return { 
            success: true, 
            message: `${evolutionData.emoji} Evolved to ${evolutionData.name}!`,
            pet: pet
        };
    },
    
    // üéØ –ò–°–ü–û–õ–¨–ó–û–í–ê–ù–ò–ï –°–ü–û–°–û–ë–ù–û–°–¢–ò
    async useAbility(pet, abilityName, walletAddress, extraData = {}) {
        const ability = this.abilities[abilityName];
        if (!ability) {
            return { success: false, message: 'Ability not found!' };
        }
        
        // –ü—Ä–æ–≤–µ—Ä–∫–∞, –µ—Å—Ç—å –ª–∏ —É –ø–∏—Ç–æ–º—Ü–∞ —ç—Ç–∞ —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å
        if (!pet.abilities.includes(abilityName)) {
            return { success: false, message: 'Pet does not have this ability!' };
        }
        
        // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫—É–ª–¥–∞—É–Ω–∞
        const now = Date.now();
        const lastUsed = pet.abilityCooldowns[abilityName] || 0;
        if (now - lastUsed < ability.cooldown) {
            const remaining = Math.ceil((ability.cooldown - (now - lastUsed)) / 1000 / 60);
            return { success: false, message: `Cooldown: ${remaining} minutes remaining` };
        }
        
        // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å
        const result = ability.effect(pet, extraData.referralCount);
        
        if (result.success) {
            // –û–±–Ω–æ–≤–ª—è–µ–º –∫—É–ª–¥–∞—É–Ω
            pet.abilityCooldowns[abilityName] = now;
            
            // –ù–∞–≥—Ä–∞–∂–¥–∞–µ–º TAMA –µ—Å–ª–∏ –µ—Å—Ç—å
            if (result.tamaReward && window.TAMAModule) {
                await window.TAMAModule.earnTAMA(result.tamaReward, 'ability', 
                    `${ability.emoji} ${ability.name} used`);
            }
            
            // –°–æ—Ö—Ä–∞–Ω—è–µ–º
            if (window.Database) {
                await window.Database.savePetData(walletAddress, pet);
            }
        }
        
        return result;
    },
    
    // üéØ –ü–û–õ–£–ß–ï–ù–ò–ï –ò–ù–§–û–†–ú–ê–¶–ò–ò –û –ü–ò–¢–û–ú–¶–ï
    getPetInfo(pet) {
        const petType = this.petTypes[pet.type];
        const rarityData = this.raritySystem[pet.rarity];
        const evolutionData = this.evolutions[pet.evolution];
        
        return {
            ...pet,
            typeInfo: petType,
            rarityInfo: rarityData,
            evolutionInfo: evolutionData,
            canEvolve: this.canEvolve(pet),
            nextEvolutionRequirements: this.evolutionRequirements[pet.evolution + 1]
        };
    },
    
    // üéØ –ü–û–õ–£–ß–ï–ù–ò–ï –í–°–ï–• –î–û–°–¢–£–ü–ù–´–• –°–ü–û–°–û–ë–ù–û–°–¢–ï–ô
    getAvailableAbilities(pet) {
        return pet.abilities.map(abilityName => {
            const ability = this.abilities[abilityName];
            const lastUsed = pet.abilityCooldowns[abilityName] || 0;
            const now = Date.now();
            const isReady = (now - lastUsed) >= ability.cooldown;
            const cooldownRemaining = isReady ? 0 : Math.ceil((ability.cooldown - (now - lastUsed)) / 1000 / 60);
            
            return {
                name: abilityName,
                ...ability,
                isReady: isReady,
                cooldownRemaining: cooldownRemaining
            };
        });
    },
    
    // üéØ –†–ê–°–ß–ï–¢ –ò–¢–û–ì–û–í–û–ì–û –ú–ù–û–ñ–ò–¢–ï–õ–Ø TAMA
    calculateTAMAMultiplier(pet) {
        let multiplier = pet.tamaMultiplier;
        
        // –î–æ–±–∞–≤–ª—è–µ–º –±–æ–Ω—É—Å—ã –æ—Ç —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–µ–π
        pet.abilities.forEach(abilityName => {
            const ability = this.abilities[abilityName];
            if (ability && ability.tamaBonus > 0) {
                multiplier += ability.tamaBonus;
            }
        });
        
        return multiplier;
    },
    
    // üéØ –ù–ê–°–¢–†–û–ô–ö–ê –ö–£–õ–î–ê–£–ù–û–í
    setupAbilityCooldowns() {
        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫—É–ª–¥–∞—É–Ω–æ–≤ –¥–ª—è –≤—Å–µ—Ö —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–µ–π
        console.log('üéØ Ability cooldowns initialized');
    }
};

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
if (typeof window !== 'undefined') {
    window.PetSystem = PetSystem;
    console.log('‚úÖ PetSystem loaded globally');
}


#!/bin/bash
# üöÄ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π devnet –¥–µ–ø–ª–æ–π

echo "üöÄ Solana Tamagotchi - Devnet Deploy"
echo "===================================="

# 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ Sugar
if ! command -v sugar &> /dev/null; then
    echo "‚ùå Sugar –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!"
    echo "–£—Å—Ç–∞–Ω–æ–≤–∏: bash <(curl -sSf https://sugar.metaplex.com/install.sh)"
    exit 1
fi

# 2. –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ—à–µ–ª—å–∫–∞ (–µ—Å–ª–∏ –Ω–µ—Ç)
if [ ! -f "devnet-wallet.json" ]; then
    echo "üìù –°–æ–∑–¥–∞—é –∫–æ—à–µ–ª–µ–∫..."
    solana-keygen new --outfile devnet-wallet.json --no-bip39-passphrase
fi

# 3. –ù–∞—Å—Ç—Ä–æ–π–∫–∞ devnet
echo "üîß –ù–∞—Å—Ç—Ä–∞–∏–≤–∞—é devnet..."
solana config set --url devnet
solana config set --keypair devnet-wallet.json

# 4. Airdrop SOL
echo "üí∞ –ü–æ–ª—É—á–∞—é SOL..."
solana airdrop 2
sleep 2
solana airdrop 2

# 5. –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–ª–∞–Ω—Å–∞
BALANCE=$(solana balance)
echo "üíé –ë–∞–ª–∞–Ω—Å: $BALANCE"

# 6. –ì–µ–Ω–µ—Ä–∞—Ü–∏—è metadata (–µ—Å–ª–∏ –Ω–µ —Å–¥–µ–ª–∞–Ω–æ)
if [ ! -d "nft-assets" ]; then
    echo "üé® –ì–µ–Ω–µ—Ä–∏—Ä—É—é metadata..."
    cd scripts
    npm install
    npm run generate-metadata
    cd ..
fi

# 7. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞—Ä—Ç–∏–Ω–æ–∫
PNG_COUNT=$(ls nft-assets/*.png 2>/dev/null | wc -l)
if [ "$PNG_COUNT" -lt 101 ]; then
    echo "‚ö†Ô∏è  –ù—É–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –∫–∞—Ä—Ç–∏–Ω–∫–∏ –≤ nft-assets/"
    echo "–ù—É–∂–Ω–æ: 0.png, 1.png, ..., 100.png, collection.png"
    echo ""
    echo "–ë—ã—Å—Ç—Ä—ã–π –≤–∞—Ä–∏–∞–Ω—Ç: —Å–æ–∑–¥–∞–π –æ–¥–Ω—É template.png –∏ –∑–∞–ø—É—Å—Ç–∏:"
    echo "cd nft-assets && for i in {0..100}; do cp template.png \$i.png; done"
    exit 1
fi

# 8. –î–µ–ø–ª–æ–π
echo "üç¨ –î–µ–ø–ª–æ—é Candy Machine..."
sugar validate
sugar upload
sugar deploy

# 9. –¢–µ—Å—Ç–æ–≤—ã–π –º–∏–Ω—Ç
echo "üéâ –ú–∏–Ω—á—É —Ç–µ—Å—Ç–æ–≤—ã–π NFT..."
sugar mint -n 1

echo ""
echo "‚úÖ –ì–û–¢–û–í–û!"
echo "–ü—Ä–æ–≤–µ—Ä—å NFT –≤ Phantom (–ø–µ—Ä–µ–∫–ª—é—á–∏ –Ω–∞ devnet)"





-- üí∞ PRICE MANAGEMENT SYSTEM - –£–ü–†–ê–í–õ–ï–ù–ò–ï –¶–ï–ù–ê–ú–ò
-- –ó–∞–ø—É—Å—Ç–∏ —ç—Ç–æ –≤ Supabase SQL Editor

-- =====================================================
-- 1. –¢–ê–ë–õ–ò–¶–ê –ù–ê–°–¢–†–û–ï–ö –ò–ì–†–´
-- =====================================================

CREATE TABLE IF NOT EXISTS game_settings (
    id SERIAL PRIMARY KEY,
    key TEXT NOT NULL UNIQUE,
    value DECIMAL(10,2) NOT NULL,
    phase INTEGER DEFAULT 1,
    tama_bonus INTEGER DEFAULT 500,
    description TEXT,
    updated_at TIMESTAMPTZ DEFAULT NOW(),
    updated_by TEXT DEFAULT 'admin'
);

-- –ò–Ω–¥–µ–∫—Å—ã
CREATE INDEX IF NOT EXISTS idx_game_settings_key ON game_settings(key);
CREATE INDEX IF NOT EXISTS idx_game_settings_updated ON game_settings(updated_at DESC);

-- –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏
COMMENT ON TABLE game_settings IS '–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–≥—Ä—ã (—Ü–µ–Ω—ã, —Ñ–∞–∑—ã, –±–æ–Ω—É—Å—ã)';
COMMENT ON COLUMN game_settings.key IS '–ö–ª—é—á –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ (nft_price, mint_bonus, etc.)';
COMMENT ON COLUMN game_settings.value IS '–ó–Ω–∞—á–µ–Ω–∏–µ (—Ü–µ–Ω–∞ –≤ SOL)';
COMMENT ON COLUMN game_settings.phase IS '–¢–µ–∫—É—â–∞—è —Ñ–∞–∑–∞';
COMMENT ON COLUMN game_settings.tama_bonus IS '–ë–æ–Ω—É—Å TAMA –∑–∞ –º–∏–Ω—Ç';

-- =====================================================
-- 2. –¢–ê–ë–õ–ò–¶–ê –ò–°–¢–û–†–ò–ò –ò–ó–ú–ï–ù–ï–ù–ò–ô –¶–ï–ù
-- =====================================================

CREATE TABLE IF NOT EXISTS price_history (
    id SERIAL PRIMARY KEY,
    old_price DECIMAL(10,2),
    new_price DECIMAL(10,2) NOT NULL,
    phase INTEGER NOT NULL,
    tama_bonus INTEGER DEFAULT 500,
    changed_at TIMESTAMPTZ DEFAULT NOW(),
    changed_by TEXT DEFAULT 'admin',
    reason TEXT
);

-- –ò–Ω–¥–µ–∫—Å—ã
CREATE INDEX IF NOT EXISTS idx_price_history_date ON price_history(changed_at DESC);
CREATE INDEX IF NOT EXISTS idx_price_history_phase ON price_history(phase);

-- –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏
COMMENT ON TABLE price_history IS '–ò—Å—Ç–æ—Ä–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π —Ü–µ–Ω NFT';
COMMENT ON COLUMN price_history.old_price IS '–°—Ç–∞—Ä–∞—è —Ü–µ–Ω–∞';
COMMENT ON COLUMN price_history.new_price IS '–ù–æ–≤–∞—è —Ü–µ–Ω–∞';
COMMENT ON COLUMN price_history.changed_by IS '–ö—Ç–æ –∏–∑–º–µ–Ω–∏–ª (admin, system, etc.)';

-- =====================================================
-- 3. –í–°–¢–ê–í–ö–ê –ù–ê–ß–ê–õ–¨–ù–´–• –ù–ê–°–¢–†–û–ï–ö
-- =====================================================

INSERT INTO game_settings (key, value, phase, tama_bonus, description) VALUES
('nft_price', 0.1, 1, 500, 'Current NFT mint price in SOL'),
('mint_bonus', 500, 1, 500, 'TAMA bonus for minting NFT'),
('daily_login', 25, 1, 0, 'Daily login TAMA reward'),
('feed_reward', 5, 1, 0, 'Feed pet TAMA reward'),
('play_reward', 10, 1, 0, 'Play with pet TAMA reward'),
('level_up_reward', 50, 1, 0, 'Level up TAMA reward')
ON CONFLICT (key) DO NOTHING;

-- =====================================================
-- 4. –§–£–ù–ö–¶–ò–Ø –ü–û–õ–£–ß–ï–ù–ò–Ø –¢–ï–ö–£–©–ï–ô –¶–ï–ù–´
-- =====================================================

CREATE OR REPLACE FUNCTION get_current_nft_price()
RETURNS TABLE (
    price DECIMAL(10,2),
    phase INTEGER,
    tama_bonus INTEGER
) AS $$
BEGIN
    RETURN QUERY
    SELECT 
        gs.value as price,
        gs.phase,
        gs.tama_bonus
    FROM game_settings gs
    WHERE gs.key = 'nft_price'
    LIMIT 1;
    
    IF NOT FOUND THEN
        RETURN QUERY SELECT 0.1::DECIMAL(10,2), 1::INTEGER, 500::INTEGER;
    END IF;
END;
$$ LANGUAGE plpgsql;

-- =====================================================
-- 5. –§–£–ù–ö–¶–ò–Ø –û–ë–ù–û–í–õ–ï–ù–ò–Ø –¶–ï–ù–´
-- =====================================================

CREATE OR REPLACE FUNCTION update_nft_price(
    new_price DECIMAL(10,2),
    new_phase INTEGER,
    new_tama_bonus INTEGER,
    admin_name TEXT DEFAULT 'admin'
)
RETURNS BOOLEAN AS $$
DECLARE
    old_price DECIMAL(10,2);
BEGIN
    -- –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ä—É—é —Ü–µ–Ω—É
    SELECT value INTO old_price
    FROM game_settings
    WHERE key = 'nft_price';
    
    -- –û–±–Ω–æ–≤–ª—è–µ–º —Ü–µ–Ω—É
    UPDATE game_settings
    SET 
        value = new_price,
        phase = new_phase,
        tama_bonus = new_tama_bonus,
        updated_at = NOW(),
        updated_by = admin_name
    WHERE key = 'nft_price';
    
    -- –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –≤ –∏—Å—Ç–æ—Ä–∏—é
    INSERT INTO price_history (old_price, new_price, phase, tama_bonus, changed_by)
    VALUES (old_price, new_price, new_phase, new_tama_bonus, admin_name);
    
    RETURN TRUE;
END;
$$ LANGUAGE plpgsql;

-- =====================================================
-- 6. –§–£–ù–ö–¶–ò–Ø –ü–û–õ–£–ß–ï–ù–ò–Ø –ò–°–¢–û–†–ò–ò –¶–ï–ù
-- =====================================================

CREATE OR REPLACE FUNCTION get_price_history(days_back INTEGER DEFAULT 30)
RETURNS TABLE (
    changed_at TIMESTAMPTZ,
    old_price DECIMAL(10,2),
    new_price DECIMAL(10,2),
    phase INTEGER,
    tama_bonus INTEGER,
    changed_by TEXT
) AS $$
BEGIN
    RETURN QUERY
    SELECT 
        ph.changed_at,
        ph.old_price,
        ph.new_price,
        ph.phase,
        ph.tama_bonus,
        ph.changed_by
    FROM price_history ph
    WHERE ph.changed_at > NOW() - (days_back || ' days')::INTERVAL
    ORDER BY ph.changed_at DESC;
END;
$$ LANGUAGE plpgsql;

-- =====================================================
-- 7. –¢–†–ò–ì–ì–ï–† –î–õ–Ø –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–û–ì–û –õ–û–ì–ò–†–û–í–ê–ù–ò–Ø
-- =====================================================

CREATE OR REPLACE FUNCTION log_price_change()
RETURNS TRIGGER AS $$
BEGIN
    -- –õ–æ–≥–∏—Ä—É–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏–µ —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —Ü–µ–Ω–∞ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –∏–∑–º–µ–Ω–∏–ª–∞—Å—å
    IF OLD.value != NEW.value OR OLD.phase != NEW.phase THEN
        INSERT INTO price_history (old_price, new_price, phase, tama_bonus, changed_by)
        VALUES (OLD.value, NEW.value, NEW.phase, NEW.tama_bonus, NEW.updated_by);
    END IF;
    
    RETURN NEW;
END;
$$ LANGUAGE plpgsql;

-- –°–æ–∑–¥–∞–µ–º —Ç—Ä–∏–≥–≥–µ—Ä
DROP TRIGGER IF EXISTS trigger_log_price_change ON game_settings;
CREATE TRIGGER trigger_log_price_change
    AFTER UPDATE ON game_settings
    FOR EACH ROW
    EXECUTE FUNCTION log_price_change();

-- =====================================================
-- 8. VIEW –î–õ–Ø –ê–î–ú–ò–ù –ü–ê–ù–ï–õ–ò
-- =====================================================

CREATE OR REPLACE VIEW admin_price_summary AS
SELECT 
    gs.key,
    gs.value as current_price,
    gs.phase as current_phase,
    gs.tama_bonus,
    gs.updated_at as last_updated,
    gs.updated_by as last_updated_by,
    COUNT(ph.id) as total_changes
FROM game_settings gs
LEFT JOIN price_history ph ON gs.key = 'nft_price' AND ph.new_price = gs.value
WHERE gs.key = 'nft_price'
GROUP BY gs.key, gs.value, gs.phase, gs.tama_bonus, gs.updated_at, gs.updated_by;

COMMENT ON VIEW admin_price_summary IS '–°–≤–æ–¥–∫–∞ –ø–æ —Ü–µ–Ω–∞–º –¥–ª—è –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª–∏';

-- =====================================================
-- ‚úÖ –ì–û–¢–û–í–û!
-- =====================================================

DO $$
BEGIN
    RAISE NOTICE '‚úÖ Price Management system setup complete!';
    RAISE NOTICE 'üìä Tables created: game_settings, price_history';
    RAISE NOTICE 'üîß Functions created: get_current_nft_price, update_nft_price, get_price_history';
    RAISE NOTICE 'üìà View created: admin_price_summary';
    RAISE NOTICE 'üéØ Initial settings inserted';
END $$;

-- =====================================================
-- –ü–†–ò–ú–ï–†–´ –ò–°–ü–û–õ–¨–ó–û–í–ê–ù–ò–Ø
-- =====================================================

-- –ü–æ–ª—É—á–∏—Ç—å —Ç–µ–∫—É—â—É—é —Ü–µ–Ω—É
-- SELECT * FROM get_current_nft_price();

-- –û–±–Ω–æ–≤–∏—Ç—å —Ü–µ–Ω—É
-- SELECT update_nft_price(0.2, 2, 750, 'admin');

-- –ü–æ–ª—É—á–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—é —Ü–µ–Ω –∑–∞ 7 –¥–Ω–µ–π
-- SELECT * FROM get_price_history(7);

-- –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–≤–æ–¥–∫—É
-- SELECT * FROM admin_price_summary;

-- –û–±–Ω–æ–≤–∏—Ç—å —Ü–µ–Ω—É —á–µ—Ä–µ–∑ UPDATE
-- UPDATE game_settings SET value = 0.15, phase = 2, updated_by = 'admin' WHERE key = 'nft_price';
